{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getDotsLength = function getDotsLength(slidesLength, items) {\n  if (Number(items) !== 0) {\n    return slidesLength % items === 0 ? Math.floor(slidesLength / items) - 1 : Math.floor(slidesLength / items);\n  }\n\n  return 0;\n};\n\nvar getActiveSlideIndex = function getActiveSlideIndex(inactiveNext, index, items, slidesLength) {\n  var dotsLength = getDotsLength(slidesLength, items);\n  var currentIndex = index + items;\n\n  if (items === 1) {\n    if (currentIndex < items) {\n      return slidesLength - items;\n    } else if (currentIndex > slidesLength) {\n      return 0;\n    } else {\n      return currentIndex - 1;\n    }\n  } else {\n    if (currentIndex === slidesLength + items) {\n      return 0;\n    } else if (inactiveNext || currentIndex < items && currentIndex !== 0) {\n      return dotsLength;\n    } else if (currentIndex === 0) {\n      return slidesLength % items === 0 ? dotsLength : dotsLength - 1;\n    } else {\n      return Math.floor(currentIndex / items) - 1;\n    }\n  }\n};\n\nvar setStartIndex = function setStartIndex(childrenLength, index) {\n  var startIndex = index ? Math.abs(Math.ceil(index)) : 0;\n  return Math.min(startIndex, childrenLength - 1);\n};\n\nvar getFadeOutOffset = function getFadeOutOffset(itemIndex, currentIndex, itemWidth) {\n  if (itemIndex < currentIndex) {\n    return (currentIndex - itemIndex) * -itemWidth;\n  } else {\n    return (itemIndex - currentIndex) * itemWidth;\n  }\n};\n\nvar getMaxSWipePosition = function getMaxSWipePosition(items, itemWidth, slidesLength) {\n  return (slidesLength + items) * itemWidth;\n};\n\nvar getSwipeMinLimit = function getSwipeMinLimit(itemWidth, _ref) {\n  var _ref$paddingLeft = _ref.paddingLeft,\n      paddingLeft = _ref$paddingLeft === undefined ? 0 : _ref$paddingLeft;\n  return paddingLeft ? itemWidth + paddingLeft : 0;\n};\n\nvar getSwipeMaxLimit = function getSwipeMaxLimit(itemWidth, maxPosition, _ref2) {\n  var _ref2$paddingRight = _ref2.paddingRight,\n      paddingRight = _ref2$paddingRight === undefined ? 0 : _ref2$paddingRight;\n  return paddingRight ? maxPosition + itemWidth - paddingRight : maxPosition;\n};\n\nvar getSlideOffset = function getSlideOffset(itemWidth) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n  return Math.min(itemWidth / 2, offset);\n};\n\nvar getLeftTranslateLimit = function getLeftTranslateLimit(items, itemWidth) {\n  return items * -itemWidth + getSlideOffset(itemWidth);\n};\n\nvar getRightTranslateLimit = function getRightTranslateLimit(slidesLength, itemWidth) {\n  return slidesLength * -itemWidth - getSlideOffset(itemWidth);\n};\n\nvar getDotsCeilLength = function getDotsCeilLength(slidesLength, items) {\n  return Number(items) !== 0 ? Math.ceil(slidesLength / items) : 0;\n};\n\nvar recalculateCurrentSlideIndex = function recalculateCurrentSlideIndex(_ref3) {\n  var slides = _ref3.slides,\n      currentIndex = _ref3.currentIndex;\n  return currentIndex < 0 ? slides.length - 1 : 0;\n};\n\nvar recalculateTranslatePosition = function recalculateTranslatePosition(state) {\n  var items = state.items,\n      itemWidth = state.itemWidth,\n      slides = state.slides,\n      stagePadding = state.stagePadding;\n  var maxSlidePosition = slides.length - 1;\n  var currentIndex = state.currentIndex < 0 ? maxSlidePosition : 0;\n  var nextIndex = currentIndex === 0 ? items : maxSlidePosition + items;\n\n  if (stagePadding.paddingLeft || stagePadding.paddingRight) {\n    return (nextIndex + 1) * -itemWidth;\n  }\n\n  return nextIndex * -itemWidth;\n};\n\nexports.getActiveSlideIndex = getActiveSlideIndex;\nexports.getDotsCeilLength = getDotsCeilLength;\nexports.getFadeOutOffset = getFadeOutOffset;\nexports.setStartIndex = setStartIndex;\nexports.getMaxSWipePosition = getMaxSWipePosition;\nexports.getSwipeMinLimit = getSwipeMinLimit;\nexports.getSwipeMaxLimit = getSwipeMaxLimit;\nexports.getLeftTranslateLimit = getLeftTranslateLimit;\nexports.getRightTranslateLimit = getRightTranslateLimit;\nexports.recalculateCurrentSlideIndex = recalculateCurrentSlideIndex;\nexports.recalculateTranslatePosition = recalculateTranslatePosition;","map":null,"metadata":{},"sourceType":"script"}